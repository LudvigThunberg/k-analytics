// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                    @id @default(uuid())
  username              String
  properties            PropertySummary[]
  googleData            GoogleData[]
  accessToken           String                    @db.Text
  refreshToken          String
  expiresIn             String
  googleId              String                    @unique
}

model PropertySummary {
  id                    String                    @id @default(uuid())
  property              String
  displayName           String
  user                  User                  @relation(fields: [userId], references: [id])
  userId                String
}

model GoogleData {
  id                    String                    @id @default(uuid())
  dimensionHeaders      DimensionHeader[]
  metricHeaders         MetricHeader[]
  rows                  Row[]
  date                  String                    @unique
  createdAt             DateTime                  @default(now())
  user                  User                  @relation(fields: [userId], references: [id])
  userId                String
}

model DimensionHeader {
  id                    String                    @id @default(uuid())
  name                  String?
  googleData            GoogleData                @relation(fields: [googleDataId], references: [id])
  googleDataId          String
}

model MetricHeader {
  id                    String                    @id @default(uuid())
  name                  String?
  type                  String?
  googleData            GoogleData                @relation(fields: [googleDataId], references: [id])
  googleDataId          String
}

model Row {
  id                    String                    @id @default(uuid())
  metricValues          MetricValue[]
  dimensionValues       DimensionValue[]
  googleData            GoogleData                @relation(fields: [googleDataId], references: [id])
  googleDataId          String
}

model DimensionValue {
  id                    String                    @id @default(uuid())
  value                 String?
  row                   Row                       @relation(fields: [rowId], references: [id])
  rowId                 String
}

model MetricValue {
  id                    String                    @id @default(uuid())
  value                 String?
  row                   Row                       @relation(fields: [rowId], references: [id])
  rowId                 String
}